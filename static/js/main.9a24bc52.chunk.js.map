{"version":3,"sources":["components/Form.js","components/Users.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","container","maxWidth","boxShadow","typography","marginTop","paper","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","marginBottom","icon","wrongCred","color","schema","yup","shape","username","required","password","SignIn","classes","useForm","resolver","yupResolver","mode","register","handleSubmit","errors","useState","setUsername","setPassword","redirect","setRedirect","wrong","setWrong","localStorage","getItem","to","Container","className","component","CssBaseline","Avatar","Typography","variant","noValidate","onSubmit","data","e","preventDefault","axios","post","baseUrl","then","res","setItem","token","request","status","catch","err","console","log","message","TextField","fullWidth","inputRef","id","label","name","autoFocus","onChange","target","value","error","helperText","autoComplete","type","Button","max","matches","firstname","lastname","tableContainer","height","menuButton","marginRight","title","flexGrow","marginLeft","cancel","Users","datas","setDatas","isActive","setIsActive","open","setOpen","openEdit","setOpenEdit","newSelection","setNewSelection","register2","errors2","handleSubmit2","useEffect","config","headers","Authorization","get","updateData","handleClickOpenEdit","handleCloseEdit","first_name","last_name","is_active","swal","columns","field","headerName","flex","renderCell","align","size","onClick","AppBar","position","Toolbar","IconButton","edge","aria-label","removeItem","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","Grid","item","xs","sm","rows","pageSize","onSelectionModelChange","selectionModel","patch","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a24bc52.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useForm} from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport axios from \"axios\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Avatar,} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        maxWidth: \"500px\",\r\n        boxShadow: '0px 0px 8px 0px rgba(34, 60, 80, 0.2)',\r\n    },\r\n    typography: {\r\n        marginTop: \"10px\"\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        marginBottom: \"20px\"\r\n    },\r\n    icon: {\r\n        marginTop: \"20px\",\r\n        backgroundColor: \"green\"\r\n    },\r\n    wrongCred: {\r\n        display: \"block\",\r\n        color: \"red\"\r\n    }\r\n}));\r\n\r\nconst schema = yup.object().shape({\r\n    username: yup\r\n        .string()\r\n        .required(\"Поле Логин обязательно для заполнения\"),\r\n    password: yup\r\n        .string()\r\n        .required(\"Поле Пароль обязательно для заполнения\")\r\n})\r\n\r\nexport const SignIn = () => {\r\n    const classes = useStyles();\r\n    const {register, handleSubmit, errors} = useForm({\r\n        resolver: yupResolver(schema),\r\n        mode: \"onBlur\"\r\n    })\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [redirect, setRedirect] = useState(false)\r\n    const [wrong, setWrong] = useState(false)\r\n    const baseUrl = 'https://emphasoft-test-assignment.herokuapp.com'\r\n\r\n    const onChangeUsername = (e) => {\r\n        setUsername(e.target.value)\r\n        console.log(username)\r\n    }\r\n\r\n    const onChangePassword = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const onSubmit = (data, e) => {\r\n        e.preventDefault()\r\n        axios\r\n            .post(baseUrl + '/api-token-auth/', {username, password})\r\n            .then((res) => {\r\n                localStorage.setItem('token', res.data.token)\r\n\r\n                if (res.request.status === 200) {\r\n                    setRedirect(true)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.message)\r\n                setWrong(true)\r\n        })\r\n    }\r\n\r\n    if (redirect) {\r\n        return <Redirect to='/users' />\r\n    }\r\n\r\n    if (localStorage.getItem('token')) {\r\n        return <Redirect to='/users' />\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className={classes.container} component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.icon}>\r\n                    <LockIcon />\r\n                </Avatar>\r\n                <Typography className={classes.typography} component=\"h1\" variant=\"h5\">\r\n                    Войти в IT\r\n                </Typography>\r\n                <form className={classes.form} noValidate\r\n                      onSubmit={handleSubmit(onSubmit)}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        inputRef={register}\r\n                        id=\"username\"\r\n                        label=\"Логин\"\r\n                        name=\"username\"\r\n                        autoFocus\r\n                        onChange={onChangeUsername}\r\n                        value={username}\r\n                        error={!!errors.username}\r\n                        helperText={errors?.username?.message}\r\n                        autoComplete=\"username\"\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        inputRef={register}\r\n                        name=\"password\"\r\n                        label=\"Пароль\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={onChangePassword}\r\n                        value={password}\r\n                        error={!!errors.password}\r\n                        helperText={errors?.password?.message}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >Вход\r\n                    </Button>\r\n                </form>\r\n                {wrong === true &&\r\n                <p className={classes.wrongCred}>Неверный логин или пароль</p>}\r\n            </div>\r\n        </Container>\r\n    );\r\n}","import axios from \"axios\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {DataGrid} from \"@material-ui/data-grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {AppBar, IconButton, Toolbar} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport swal from \"sweetalert\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst schema = yup.object().shape({\r\n    username: yup\r\n        .string()\r\n        .required(\"Username is a required field\")\r\n        .max(150)\r\n        .matches(/^[\\w.@+-]+$/, \"Username can contain numbers, letters or @/./+/-/_ only \"),\r\n    password: yup\r\n        .string()\r\n        .required(\"Password is a required field\")\r\n        .max(128)\r\n        .matches(/^(?=.*[A-Z])(?=.*\\d).{8,}$/, \"Password must be at least 8 characters, including a number, an uppercase letter, and a lowercase letter\"),\r\n    firstname: yup\r\n        .string()\r\n        .required(\"Firstname is a required field\")\r\n        .max(30),\r\n    lastname: yup\r\n        .string()\r\n        .required(\"Lastname is a required field\")\r\n        .max(150),\r\n    // usernameEdit: yup\r\n    //     .string()\r\n    //     .required(\"Username is a required field\")\r\n    //     .max(150)\r\n    //     .matches(/^[\\w.@+-]+$/, \"Username can contain numbers, letters or @/./+/-/_ only \"),\r\n    // passwordEdit: yup\r\n    //     .string()\r\n    //     .required(\"Password is a required field\")\r\n    //     .max(128)\r\n    //     .matches(/^(?=.*[A-Z])(?=.*\\d).{8,}$/, \"Password must be at least 8 characters, including a number, an uppercase letter and a lowercase letter\"),\r\n    // firstnameEdit: yup\r\n    //     .string()\r\n    //     .required(\"Firstname is a required field\")\r\n    //     .max(30),\r\n    // lastnameEdit: yup\r\n    //     .string()\r\n    //     .required(\"Lastname is a required field\")\r\n    //     .max(150),\r\n})\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tableContainer: {\r\n        maxWidth: \"1200px\",\r\n        margin: \"0 auto\",\r\n        height: \"800px\"\r\n    },\r\n    menuButton: {\r\n        marginRight: \"0\",\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        marginLeft: \"-20px\"\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cancel: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        marginTop: \"0px\"\r\n    },\r\n}));\r\n\r\nexport const Users = () => {\r\n    const classes = useStyles();\r\n    const [datas, setDatas] = useState([])\r\n    const [redirect, setRedirect] = useState(false)\r\n    // const [username, setUsername] = useState('')\r\n    // const [password, setPassword] = useState('')\r\n    // const [firstname, setFirstname] = useState('')\r\n    // const [lastname, setLastname] = useState('')\r\n    const [isActive, setIsActive] = useState(false)\r\n    const [open, setOpen] = useState(false)\r\n    const [openEdit, setOpenEdit] = useState(false)\r\n    const [newSelection, setNewSelection] = useState('')\r\n\r\n    const {register, handleSubmit, errors} = useForm({\r\n        resolver: yupResolver(schema),\r\n    })\r\n\r\n    const {\r\n        register: register2,\r\n        errors: errors2,\r\n        handleSubmit: handleSubmit2\r\n    } = useForm({\r\n        resolver: yupResolver(schema)\r\n    });\r\n\r\n    const baseUrl = 'https://emphasoft-test-assignment.herokuapp.com'\r\n\r\n    useEffect(() => {\r\n        const config = {\r\n            headers: {\r\n                Authorization: 'Token ' + localStorage.getItem('token')\r\n            }\r\n        }\r\n        axios\r\n            .get(baseUrl + '/api/v1/users/', config)\r\n            .then((res) => {\r\n                setDatas(res.data)\r\n            })\r\n    }, [])\r\n\r\n    const updateData = () => {\r\n        const config = {\r\n            headers: {\r\n                Authorization: 'Token ' + localStorage.getItem('token')\r\n            }\r\n        }\r\n        axios\r\n            .get(baseUrl + '/api/v1/users/', config)\r\n            .then((res) => {\r\n                setDatas(res.data)\r\n            })\r\n    }\r\n\r\n    const handleExit = (e) => {\r\n        e.preventDefault()\r\n        localStorage.removeItem('token')\r\n        setRedirect(true)\r\n    }\r\n\r\n\r\n    // EditPopup\r\n\r\n    const handleClickOpenEdit = () => {\r\n        // const config = {\r\n        //     headers: {\r\n        //         Authorization: 'Token ' + localStorage.getItem('token')\r\n        //     }\r\n        // }\r\n        // axios\r\n        //     .get(baseUrl + '/api/v1/users/' + `${newSelection}`, config)\r\n        //     .then((res) => {\r\n        //         setFirstname(res.data.first_name)\r\n        //         setLastname(res.data.last_name)\r\n        //         setUsername(res.data.username)\r\n        //         //setPassword(res.data.password)\r\n        //     })\r\n        //     .then(() => {\r\n                setOpenEdit(true)\r\n            // })\r\n    };\r\n\r\n    const handleCloseEdit = () => {\r\n        setOpenEdit(false)\r\n    }\r\n\r\n    const onSubmitEdit = (data, e) => {\r\n        const config = {\r\n            headers: {\r\n                Authorization: 'Token ' + localStorage.getItem('token')\r\n            }\r\n        }\r\n        e.preventDefault()\r\n        setIsActive(true)\r\n        axios\r\n            .patch(baseUrl + '/api/v1/users/' + `${newSelection}/`, {username: data.username, first_name: data.firstname, last_name: data.lastname, password:data.password, is_active: isActive}, config)\r\n            .then((res) => {\r\n                swal({\r\n                    icon: \"success\",\r\n                    title: \"The user is updated!\"\r\n                })\r\n                updateData()\r\n            })\r\n            .then(() => {\r\n                setOpenEdit(false)\r\n            })\r\n\r\n            .catch((err) => {\r\n                console.log(err.message)\r\n            })\r\n    }\r\n\r\n    //Add Popup\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const onSubmit = (data, e) => {\r\n        const config = {\r\n            headers: {\r\n                Authorization: 'Token ' + localStorage.getItem('token')\r\n            }\r\n        }\r\n        e.preventDefault()\r\n        setIsActive(true)\r\n        axios\r\n            .post(baseUrl + '/api/v1/users/', {username: data.username, password: data.password, first_name: data.firstname, last_name: data.lastname, is_active: isActive}, config)\r\n            .then((res) => {\r\n                swal({\r\n                    icon: \"success\",\r\n                    title: \"The user is created!\"\r\n                })\r\n                updateData()\r\n            })\r\n            .then(() => {\r\n                setOpen(false)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.message)\r\n            })\r\n    }\r\n\r\n    //End\r\n\r\n    if (redirect) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    const columns = [\r\n        {field: 'id', headerName: 'ID',flex: 0.5 },\r\n        {field: 'username', headerName: 'Username', flex: 1},\r\n        {field: 'first_name', headerName: 'Firstname',flex: 1},\r\n        {field: 'last_name', headerName: 'Lastname',flex: 1 },\r\n        {field: 'is_active', headerName: 'Is active',flex: 1},\r\n        {field: 'last_login', headerName: 'Last login',flex: 1 },\r\n        {field: 'is_superuser', headerName: 'Is superuser',flex: 1 },\r\n        {\r\n            field: '',\r\n            renderCell: () => (\r\n                <strong>\r\n                    <Button\r\n                        align=\"left\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        onClick={handleClickOpenEdit}\r\n                    >\r\n                        <EditIcon />\r\n                    </Button>\r\n                </strong>\r\n            ),\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <div className={classes.tableContainer}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\"\r\n                                className={classes.menuButton}\r\n                                color=\"inherit\"\r\n                                aria-label=\"menu\">\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Awesome Table!\r\n                    </Typography>\r\n                    <Button color=\"inherit\" onClick={handleClickOpen}>\r\n                       + Add user\r\n                    </Button>\r\n                    <Button onClick={handleExit} color=\"inherit\">Logout</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            {/*Add popup*/}\r\n\r\n            <Dialog open={open} onClose={onSubmit} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">New user</DialogTitle>\r\n                <DialogContent>\r\n                    <form className={classes.form} noValidate\r\n                          onSubmit={handleSubmit(onSubmit)}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    // autoComplete=\"firstname\"\r\n                                    name=\"firstname\"\r\n                                    variant=\"outlined\"\r\n                                    //required\r\n                                    fullWidth\r\n                                    id=\"firstname\"\r\n                                    label=\"First Name\"\r\n                                    autoFocus\r\n                                    inputRef={register}\r\n                                    error={!!errors.firstname}\r\n                                    helperText={errors?.firstname?.message}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    //required\r\n                                    fullWidth\r\n                                    id=\"lastname\"\r\n                                    label=\"Last Name\"\r\n                                    name=\"lastname\"\r\n                                    // autoComplete=\"lastname\"\r\n                                    inputRef={register}\r\n                                    error={!!errors.lastname}\r\n                                    helperText={errors?.lastname?.message}>\r\n                                </TextField>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    //required\r\n                                    fullWidth\r\n                                    id=\"username\"\r\n                                    label=\"Username\"\r\n                                    name=\"username\"\r\n                                    // autoComplete=\"username\"\r\n                                    inputRef={register}\r\n                                    error={!!errors.username}\r\n                                    helperText={errors?.username?.message}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    //required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    inputRef={register}\r\n                                    error={!!errors.password}\r\n                                    helperText={errors?.password?.message}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Add\r\n                        </Button>\r\n                        <Button onClick={handleClose}\r\n                                color=\"primary\"\r\n                                variant=\"contained\"\r\n                                fullWidth\r\n                                className={classes.cancel}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n\r\n            {/*DataGrid*/}\r\n\r\n            <DataGrid\r\n                      rows={datas}\r\n                      columns={columns}\r\n                      pageSize={25}\r\n\r\n                      onSelectionModelChange={(res) => {\r\n                          setNewSelection(res.selectionModel[0])\r\n                      }}\r\n            />\r\n\r\n\r\n             {/*Edit popup*/}\r\n\r\n\r\n            <Dialog open={openEdit} onClose={handleCloseEdit} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Edit user with ID {newSelection}</DialogTitle>\r\n                <DialogContent>\r\n                    <form className={classes.form} noValidate\r\n                          onSubmit={handleSubmit2(onSubmitEdit)}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    // autoComplete=\"firstname\"\r\n                                    //defaultValue={firstname}\r\n                                    name=\"firstname\"\r\n                                    variant=\"outlined\"\r\n                                    //required\r\n                                    fullWidth\r\n                                    id=\"firstname\"\r\n                                    label=\"First Name\"\r\n                                    autoFocus\r\n                                    inputRef={register2}\r\n                                    error={!!errors2.firstname}\r\n                                    helperText={errors2?.firstname?.message}\r\n                                    // onChange={onChangeFirstnameEdit}\r\n                                    // value={firstname}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    //required\r\n                                    fullWidth\r\n                                    //defaultValue={lastname}\r\n                                    id=\"lastname\"\r\n                                    label=\"Last Name\"\r\n                                    name=\"lastname\"\r\n                                    // autoComplete=\"lastname\"\r\n                                    inputRef={register2}\r\n                                    error={!!errors2.lastname}\r\n                                    helperText={errors2?.lastname?.message}\r\n                                    // onChange={onChangeLastnameEdit}\r\n                                    // value={lastname}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    //required\r\n                                    fullWidth\r\n                                    //defaultValue={username}\r\n                                    id=\"username\"\r\n                                    label=\"Username\"\r\n                                    name=\"username\"\r\n                                    // autoComplete=\"username\"\r\n                                    inputRef={register2}\r\n                                    //value={username}\r\n                                    error={!!errors2.username}\r\n                                    helperText={errors2?.username?.message}\r\n                                    //onChange={onChangeUsernameEdit}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    //required\r\n                                    fullWidth\r\n                                    //defaultValue={password}\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    inputRef={register2}\r\n                                    error={!!errors2.password}\r\n                                    helperText={errors2?.password?.message}\r\n                                    // onChange={onChangePasswordEdit}\r\n                                    // value={password}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Done\r\n                        </Button>\r\n                        <Button onClick={handleCloseEdit}\r\n                                color=\"primary\"\r\n                                variant=\"contained\"\r\n                                fullWidth\r\n                                className={classes.cancel}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import {SignIn} from \"./components/Form\";\r\nimport {Users} from \"./components/Users\";\r\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <HashRouter>\r\n                <Switch>\r\n                    <Route exact path='/' component={SignIn}/>\r\n                    <Route path='/users' component={Users}/>\r\n                </Switch>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}