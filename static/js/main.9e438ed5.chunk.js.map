{"version":3,"sources":["components/Form.js","components/table.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","container","maxWidth","boxShadow","typography","marginTop","paper","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","marginBottom","icon","wrongCred","color","schema","yup","shape","username","required","password","SignIn","classes","useForm","resolver","yupResolver","mode","register","handleSubmit","errors","useState","setUsername","setPassword","redirect","setRedirect","wrong","setWrong","localStorage","getItem","to","Container","className","component","CssBaseline","Avatar","Typography","variant","noValidate","onSubmit","data","e","preventDefault","axios","post","baseUrl","then","res","setItem","token","request","status","catch","err","console","log","message","TextField","fullWidth","inputRef","id","label","name","autoFocus","onChange","target","value","error","helperText","autoComplete","type","Button","app","minWidth","height","cancel","iconEdit","cursor","iconDelete","arrow","position","marginLeft","inputMaterial","menuButton","marginRight","title","flexGrow","root","padding","input","flex","max","matches","firstname","lastname","DataTable","styles","setData","open","setOpen","openEdit","setOpenEdit","isActive","setIsActive","sortDir","setSortDir","searchTerm","setSearchTerm","selectedRow","setSelectedRow","selectedRowData","setSelectedRowData","openDelete","setOpenDelete","fieldData","setFieldData","register2","errors2","handleSubmit2","useEffect","config","headers","Authorization","get","updateData","Arrow","fieldSortData","field","sortData","copyData","sort","a","b","toString","toLowerCase","reverse","handleClose","handleClickOpenEdit","handleCloseEdit","handleOpenDelete","AppBar","Toolbar","IconButton","edge","aria-label","Paper","InputBase","placeholder","inputProps","onClick","removeItem","TableContainer","Table","TableHead","TableRow","selected","TableCell","TableSortLabel","hideSortIcon","TableBody","filter","val","includes","map","item","first_name","last_name","is_active","is_superuser","style","size","Edit","Delete","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","swal","Grid","xs","sm","patch","defaultValue","keepMounted","aria-describedby","DialogActions","delete","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e438ed5.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useForm} from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport axios from \"axios\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Avatar,} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        maxWidth: \"500px\",\r\n        boxShadow: '0px 0px 8px 0px rgba(34, 60, 80, 0.2)',\r\n    },\r\n    typography: {\r\n        marginTop: \"10px\"\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        marginBottom: \"20px\"\r\n    },\r\n    icon: {\r\n        marginTop: \"20px\",\r\n        backgroundColor: \"green\"\r\n    },\r\n    wrongCred: {\r\n        display: \"block\",\r\n        color: \"red\"\r\n    }\r\n}));\r\n\r\nconst schema = yup.object().shape({\r\n    username: yup\r\n        .string()\r\n        .required(\"Поле Логин обязательно для заполнения\"),\r\n    password: yup\r\n        .string()\r\n        .required(\"Поле Пароль обязательно для заполнения\")\r\n})\r\n\r\nexport const SignIn = () => {\r\n    const classes = useStyles();\r\n    const {register, handleSubmit, errors} = useForm({\r\n        resolver: yupResolver(schema),\r\n        mode: \"onBlur\"\r\n    })\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [redirect, setRedirect] = useState(false)\r\n    const [wrong, setWrong] = useState(false)\r\n    const baseUrl = 'https://emphasoft-test-assignment.herokuapp.com'\r\n\r\n    const onChangeUsername = (e) => {\r\n        setUsername(e.target.value)\r\n        console.log(username)\r\n    }\r\n\r\n    const onChangePassword = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const onSubmit = (data, e) => {\r\n        e.preventDefault()\r\n        axios\r\n            .post(baseUrl + '/api-token-auth/', {username, password})\r\n            .then((res) => {\r\n                localStorage.setItem('token', res.data.token)\r\n\r\n                if (res.request.status === 200) {\r\n                    setRedirect(true)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.message)\r\n                setWrong(true)\r\n        })\r\n    }\r\n\r\n    if (redirect) {\r\n        return <Redirect to='/users' />\r\n    }\r\n\r\n    if (localStorage.getItem('token')) {\r\n        return <Redirect to='/users' />\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className={classes.container} component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.icon}>\r\n                    <LockIcon />\r\n                </Avatar>\r\n                <Typography className={classes.typography} component=\"h1\" variant=\"h5\">\r\n                    Войти в IT\r\n                </Typography>\r\n                <form className={classes.form} noValidate\r\n                      onSubmit={handleSubmit(onSubmit)}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        inputRef={register}\r\n                        id=\"username\"\r\n                        label=\"Логин\"\r\n                        name=\"username\"\r\n                        autoFocus\r\n                        onChange={onChangeUsername}\r\n                        value={username}\r\n                        error={!!errors.username}\r\n                        helperText={errors?.username?.message}\r\n                        autoComplete=\"username\"\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        inputRef={register}\r\n                        name=\"password\"\r\n                        label=\"Пароль\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={onChangePassword}\r\n                        value={password}\r\n                        error={!!errors.password}\r\n                        helperText={errors?.password?.message}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >Вход\r\n                    </Button>\r\n                </form>\r\n                {wrong === true &&\r\n                <p className={classes.wrongCred}>Неверный логин или пароль</p>}\r\n            </div>\r\n        </Container>\r\n    );\r\n}","import React, {useEffect, useState} from 'react'\r\nimport axios from \"axios\";\r\nimport {\r\n    Table, TableContainer, TableHead,\r\n    TableCell, TableSortLabel, TableBody,\r\n    TableRow, Button, AppBar, DialogActions,\r\n    IconButton, makeStyles, Toolbar, TextField, Paper, InputBase,\r\n} from '@material-ui/core';\r\nimport {Edit, Delete} from '@material-ui/icons';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport swal from \"sweetalert\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport * as yup from \"yup\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    app: {\r\n        minWidth: \"600px\",\r\n        maxWidth: \"1000px\",\r\n        margin: \"0 auto\",\r\n        height: \"800px\",\r\n        boxShadow: \"0px 0px 8px 0px rgba(34, 60, 80, 0.2)\",\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cancel: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        marginTop: \"0px\"\r\n    },\r\n    iconEdit:{\r\n        cursor: 'pointer'\r\n    },\r\n    iconDelete: {\r\n        color: \"red\",\r\n        cursor: 'pointer',\r\n    },\r\n    arrow: {\r\n        position: \"absolute\",\r\n        marginLeft: \"100%\"\r\n    },\r\n    inputMaterial:{\r\n        width: '100%'\r\n    },\r\n    menuButton: {\r\n        marginRight: \"0\",\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        marginLeft: \"-20px\"\r\n    },\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 200,\r\n        marginRight: 10,\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n\r\n}));\r\nconst schema = yup.object().shape({\r\n    username: yup\r\n        .string()\r\n        .required(\"Username is a required field\")\r\n        .max(150)\r\n        .matches(/^[\\w.@+-]+$/, \"Username can contain numbers, letters or @/./+/-/_ only \"),\r\n    password: yup\r\n        .string()\r\n        .required(\"Password is a required field\")\r\n        .max(128)\r\n        .matches(/^(?=.*[A-Z])(?=.*\\d).{8,}$/, \"Password must be at least 8 characters, including a number, an uppercase letter, and a lowercase letter\"),\r\n    firstname: yup\r\n        .string()\r\n        .required(\"Firstname is a required field\")\r\n        .max(30),\r\n    lastname: yup\r\n        .string()\r\n        .required(\"Lastname is a required field\")\r\n        .max(150),\r\n})\r\n\r\nexport const DataTable = () => {\r\n    const styles= useStyles();\r\n    const [data, setData] = useState([])\r\n    const [open, setOpen] = useState(false)\r\n    const [openEdit, setOpenEdit] = useState(false)\r\n    const [isActive, setIsActive] = useState(false)\r\n    const [redirect, setRedirect] = useState(false)\r\n    const [sortDir, setSortDir] = useState(true)\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n    const [selectedRow, setSelectedRow] = useState([])\r\n    const [selectedRowData, setSelectedRowData] = useState('')\r\n    const [openDelete, setOpenDelete] = useState(false)\r\n    const [fieldData, setFieldData] = useState('')\r\n    const {register, handleSubmit, errors} = useForm({\r\n        resolver: yupResolver(schema),\r\n    })\r\n    const {register: register2, errors: errors2, handleSubmit: handleSubmit2} = useForm({\r\n        resolver: yupResolver(schema)\r\n    })\r\n    const baseUrl = 'https://emphasoft-test-assignment.herokuapp.com'\r\n\r\n    useEffect(() => {\r\n        const config = {\r\n            headers: {\r\n                Authorization: 'Token ' + localStorage.getItem('token')\r\n            }\r\n        }\r\n        axios\r\n            .get(baseUrl + '/api/v1/users/', config)\r\n            .then((res) => {\r\n                setData(res.data)\r\n            })\r\n    }, [])\r\n\r\n    const updateData = () => {\r\n        const config = {\r\n            headers: {\r\n                Authorization: 'Token ' + localStorage.getItem('token')\r\n            }\r\n        }\r\n        axios\r\n            .get(baseUrl + '/api/v1/users/', config)\r\n            .then((res) => {\r\n                setData(res.data)\r\n            })\r\n    }\r\n    const handleExit = (e) => {\r\n        e.preventDefault()\r\n        localStorage.removeItem('token')\r\n        setRedirect(true)\r\n    }\r\n    const handleChangeSearch = (e) => {\r\n        setSearchTerm(e.target.value)\r\n    }\r\n\r\n    //Start sorting stuff\r\n    const sortData = (field) => {\r\n        const copyData = [...data]\r\n        let sortData\r\n        if (sortDir) {\r\n            sortData = copyData.sort(\r\n                (a, b) => {return a[field].toString().toLowerCase()\r\n                > b[field].toString().toLowerCase() ? 1 : -1}\r\n            )\r\n        } sortData = copyData.reverse(\r\n            (a, b) => {return a[field].toString().toLowerCase()\r\n            > b[field].toString().toLowerCase() ? 1 : -1}\r\n        )\r\n        setData(sortData)\r\n        setSortDir(!sortDir)\r\n    }\r\n    const Arrow = () => {\r\n        return (\r\n            sortDir ? <ArrowDropDownIcon className={styles.arrow}/> : <ArrowDropUpIcon className={styles.arrow}/>\r\n        )\r\n    }\r\n    const fieldSortData = (field) => {\r\n        sortData(field)\r\n        setFieldData(field)\r\n    }\r\n    // End sorting stuff\r\n\r\n    //Add popup\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n    const onSubmit = (data, e) => {\r\n        const config = {\r\n            headers: {\r\n                Authorization: 'Token ' + localStorage.getItem('token')\r\n            }\r\n        }\r\n        e.preventDefault()\r\n        setIsActive(true)\r\n        axios\r\n            .post(baseUrl + '/api/v1/users/', {username: data.username, password: data.password, first_name: data.firstname, last_name: data.lastname, is_active: isActive}, config)\r\n            .then((res) => {\r\n                swal({\r\n                    icon: \"success\",\r\n                    title: \"The user is created!\"\r\n                })\r\n                updateData()\r\n            })\r\n            .then(() => {\r\n                setOpen(false)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.message)\r\n            })\r\n    }\r\n    //End add popup\r\n\r\n    //Edit popup\r\n    const handleClickOpenEdit = () => {\r\n        setOpenEdit(true)\r\n    };\r\n    const handleCloseEdit = () => {\r\n        setOpenEdit(false)\r\n    }\r\n    const onSubmitEdit = (data, e) => {\r\n        const config = {\r\n            headers: {\r\n                Authorization: 'Token ' + localStorage.getItem('token')\r\n            }\r\n        }\r\n        e.preventDefault()\r\n        setIsActive(true)\r\n        axios\r\n            .patch(baseUrl + '/api/v1/users/' + `${selectedRow}/`, {username: data.username, first_name: data.firstname, last_name: data.lastname, password:data.password, is_active: isActive}, config)\r\n            .then((res) => {\r\n                swal({\r\n                    icon: \"success\",\r\n                    title: \"The user is updated!\"\r\n                })\r\n                setFieldData('')\r\n                updateData()\r\n            })\r\n            .then(() => {\r\n                setOpenEdit(false)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.message)\r\n            })\r\n    }\r\n    //End edit popup\r\n\r\n    //Delete popup\r\n    const handleOpenDelete = () => {\r\n        setOpenDelete(true)\r\n    }\r\n    const handleCloseDelete = () => {\r\n        setOpenDelete(false)\r\n    }\r\n    const handleDeleteUser = (e) => {\r\n        const config = {\r\n            headers: {\r\n                Authorization: 'Token ' + localStorage.getItem('token')\r\n            }\r\n        }\r\n        e.preventDefault()\r\n        axios\r\n            .delete(baseUrl + '/api/v1/users/' + `${selectedRow}/`, config)\r\n            .then((res) => {\r\n                setOpenDelete(false)\r\n                swal({\r\n                    icon: \"success\",\r\n                    title: \"The user is deleted!\"\r\n                })\r\n                setFieldData('')\r\n                updateData()\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.message)\r\n            })\r\n    }\r\n    //End delete popup\r\n\r\n    if (redirect) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n        <div className={styles.app}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\"\r\n                                className={styles.menuButton}\r\n                                color=\"inherit\"\r\n                                aria-label=\"menu\">\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={styles.title}>\r\n                        Awesome Table!\r\n                    </Typography>\r\n                    <Paper component=\"form\" className={styles.root}>\r\n                    <InputBase\r\n                        className={styles.input}\r\n                        placeholder=\"Type username\"\r\n                        inputProps={{ 'aria-label': 'search here' }}\r\n                        onChange={handleChangeSearch}\r\n                    />\r\n                    </Paper>\r\n                    <Button color=\"inherit\" onClick={handleClickOpen}>\r\n                        + Add user\r\n                    </Button>\r\n                    <Button color=\"inherit\" onClick={handleExit}>Logout</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <TableContainer>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow selected={true}>\r\n                            <TableCell onClick={() => {\r\n                                fieldSortData('id')\r\n                            }}>\r\n                                <TableSortLabel hideSortIcon={true}>\r\n                                    ID{fieldData === \"id\" ? <Arrow/> : null}\r\n                                </TableSortLabel>\r\n                            </TableCell>\r\n                            <TableCell onClick={() => {\r\n                                fieldSortData('username')\r\n                            }}>\r\n                                <TableSortLabel hideSortIcon={true}>\r\n                                    Username{fieldData === \"username\" ? <Arrow/> : null}\r\n                                </TableSortLabel>\r\n                            </TableCell>\r\n                            <TableCell onClick={() => {\r\n                                fieldSortData('first_name')\r\n                            }}>\r\n                                <TableSortLabel hideSortIcon={true}>\r\n                                    Firstname{fieldData === \"first_name\" ? <Arrow/> : null}\r\n                                </TableSortLabel>\r\n                            </TableCell>\r\n                            <TableCell onClick={() => {\r\n                                fieldSortData('last_name')\r\n                            }}>\r\n                                <TableSortLabel hideSortIcon={true}>\r\n                                    Lastname{fieldData === \"last_name\" ? <Arrow/> : null}\r\n                                </TableSortLabel>\r\n                            </TableCell>\r\n                            <TableCell onClick={() => {\r\n                                fieldSortData('is_active')\r\n                            }}>\r\n                                <TableSortLabel hideSortIcon={true}>\r\n                                    Is active{fieldData === \"is_active\" ? <Arrow/> : null}\r\n                                </TableSortLabel>\r\n                            </TableCell>\r\n                            <TableCell onClick={() => {\r\n                                fieldSortData('is_superuser')\r\n                            }}>\r\n                                <TableSortLabel hideSortIcon={true}>\r\n                                    Is superuser{fieldData === \"is_superuser\" ? <Arrow/> : null}\r\n                                </TableSortLabel>\r\n                            </TableCell>\r\n                            <TableCell>Actions</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {data\r\n                            .filter((val) => {\r\n                                if (searchTerm === '') {\r\n                                    return val\r\n                                } else if (val.username.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                                    return val\r\n                                }\r\n                            })\r\n                            .map((item) => (\r\n                                <TableRow onClick={() => {\r\n                                    setSelectedRow(item.id)\r\n                                    setSelectedRowData(item)\r\n                                }} key={item.id}>\r\n                                    <TableCell>{item.id}</TableCell>\r\n                                    <TableCell>{item.username}</TableCell>\r\n                                    <TableCell>{item.first_name}</TableCell>\r\n                                    <TableCell>{item.last_name}</TableCell>\r\n                                    <TableCell>{item.is_active + ''}</TableCell>\r\n                                    <TableCell>{item.is_superuser + ''}</TableCell>\r\n                                    <TableCell>\r\n                                        <Button\r\n                                            style={{maxWidth: '30px', minWidth: '30px'}}\r\n                                            size=\"small\">\r\n                                            <Edit\r\n                                                color=\"primary\"\r\n                                                onClick={handleClickOpenEdit}\r\n                                                className={styles.iconEdit}/>\r\n                                        </Button>\r\n                                        <Button\r\n                                            style={{maxWidth: '30px', minWidth: '30px'}}\r\n                                            size=\"small\"><Delete\r\n                                            onClick={handleOpenDelete}\r\n                                            className={styles.iconDelete}/>\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            {/*Add popup*/}\r\n            <Dialog open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">New user</DialogTitle>\r\n                <DialogContent>\r\n                    <form className={styles.form} noValidate\r\n                          onSubmit={handleSubmit(onSubmit)}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    name=\"firstname\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    id=\"firstname\"\r\n                                    label=\"First Name\"\r\n                                    autoFocus\r\n                                    inputRef={register}\r\n                                    error={!!errors.firstname}\r\n                                    helperText={errors?.firstname?.message}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    id=\"lastname\"\r\n                                    label=\"Last Name\"\r\n                                    name=\"lastname\"\r\n                                    inputRef={register}\r\n                                    error={!!errors.lastname}\r\n                                    helperText={errors?.lastname?.message}>\r\n                                </TextField>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    id=\"username\"\r\n                                    label=\"Username\"\r\n                                    name=\"username\"\r\n                                    inputRef={register}\r\n                                    error={!!errors.username}\r\n                                    helperText={errors?.username?.message}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    inputRef={register}\r\n                                    error={!!errors.password}\r\n                                    helperText={errors?.password?.message}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={styles.submit}\r\n                        >\r\n                            Add\r\n                        </Button>\r\n                        <Button onClick={handleClose}\r\n                                color=\"primary\"\r\n                                variant=\"contained\"\r\n                                fullWidth\r\n                                className={styles.cancel}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n            {/*End add popup*/}\r\n\r\n            {/*Start edit popup */}\r\n            <Dialog open={openEdit} onClose={handleCloseEdit} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Edit user with ID {selectedRow}</DialogTitle>\r\n                <DialogContent>\r\n                    <form className={styles.form} noValidate\r\n                          onSubmit={handleSubmit2(onSubmitEdit)}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    defaultValue={selectedRowData.first_name}\r\n                                    name=\"firstname\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    id=\"firstname\"\r\n                                    label=\"First Name\"\r\n                                    autoFocus\r\n                                    inputRef={register2}\r\n                                    error={!!errors2.firstname}\r\n                                    helperText={errors2?.firstname?.message}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    defaultValue={selectedRowData.last_name}\r\n                                    id=\"lastname\"\r\n                                    label=\"Last Name\"\r\n                                    name=\"lastname\"\r\n                                    inputRef={register2}\r\n                                    error={!!errors2.lastname}\r\n                                    helperText={errors2?.lastname?.message}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    defaultValue={selectedRowData.username}\r\n                                    id=\"username\"\r\n                                    label=\"Username\"\r\n                                    name=\"username\"\r\n                                    inputRef={register2}\r\n                                    error={!!errors2.username}\r\n                                    helperText={errors2?.username?.message}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    inputRef={register2}\r\n                                    error={!!errors2.password}\r\n                                    helperText={errors2?.password?.message}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={styles.submit}\r\n                        >\r\n                            Done\r\n                        </Button>\r\n                        <Button onClick={handleCloseEdit}\r\n                                color=\"primary\"\r\n                                variant=\"contained\"\r\n                                fullWidth\r\n                                className={styles.cancel}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n            {/* End edit popup*/}\r\n\r\n            {/*Delete popup*/}\r\n            <Dialog\r\n                open={openDelete}\r\n                keepMounted\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">Delete ID {selectedRow}?</DialogTitle>\r\n                <DialogActions>\r\n                    <Button onClick={handleCloseDelete} color=\"primary\"\r\n                            variant=\"contained\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleDeleteUser} color=\"primary\"\r\n                            variant=\"contained\">\r\n                        Delete\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            {/*End delete popup*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n","import {SignIn} from \"./components/Form\";\r\nimport {Users} from \"./components/Users\";\r\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\r\nimport {DataTable} from \"./components/table\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <HashRouter>\r\n                <Switch>\r\n                    <Route exact path='/' component={SignIn}/>\r\n                    <Route path='/users' component={DataTable}/>\r\n                </Switch>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}