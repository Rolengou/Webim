{"version":3,"sources":["components/Form.js","components/AppHeader.js","components/DataTable.js","components/AddUserPopup.js","components/EditUserPopup.js","components/DeleteUserPopup.js","components/Main.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","container","maxWidth","boxShadow","typography","marginTop","paper","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","marginBottom","icon","wrongCred","color","schema","yup","shape","username","required","password","SignIn","classes","useForm","resolver","yupResolver","mode","register","handleSubmit","errors","useState","setUsername","setPassword","redirect","setRedirect","wrong","setWrong","localStorage","getItem","to","Container","className","component","CssBaseline","Avatar","Typography","variant","noValidate","onSubmit","data","e","preventDefault","axios","post","baseUrl","then","res","setItem","token","request","status","catch","err","console","log","message","TextField","fullWidth","inputRef","id","label","name","autoFocus","onChange","target","value","error","helperText","autoComplete","type","Button","AppHeader","props","AppBar","position","Toolbar","IconButton","edge","styles","menuButton","aria-label","title","Paper","root","InputBase","input","placeholder","inputProps","handleChangeSearch","onClick","handleClickOpen","handleExit","DataTables","TableContainer","Table","TableHead","TableRow","selected","TableCell","style","fieldSortData","TableSortLabel","hideSortIcon","fieldData","chooseArrow","TableBody","filter","val","searchTerm","toLowerCase","includes","map","item","setSelectedRow","setSelectedRowData","first_name","last_name","is_active","is_superuser","minWidth","size","Edit","handleClickOpenEdit","iconEdit","Delete","handleOpenDelete","iconDelete","AddUserPopup","Dialog","open","onClose","handleClose","aria-labelledby","DialogTitle","DialogContent","Grid","xs","sm","firstname","lastname","cancel","errorUser","userExist","EditUserPopup","register2","errors2","handleSubmit2","openEdit","handleCloseEdit","selectedRow","onSubmitEdit","defaultValue","selectedRowData","DeleteUserPopup","openDelete","keepMounted","aria-describedby","DialogActions","handleCloseDelete","handleDeleteUser","app","height","justifyContent","cursor","arrow","marginLeft","inputMaterial","marginRight","flexGrow","padding","flex","max","matches","Main","setData","setOpen","setOpenEdit","isActive","setIsActive","sortDir","setSortDir","setSearchTerm","setOpenDelete","setFieldData","setErrorUser","useEffect","config","headers","Authorization","get","updateData","removeItem","field","sortData","copyData","sort","a","b","toString","reverse","swal","response","patch","delete","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"oRAeMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,UAAW,CACPC,SAAU,QACVC,UAAW,yCAEfC,WAAY,CACRC,UAAW,QAEfC,MAAO,CACHD,UAAWL,EAAMO,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,OAAQ,CACJC,OAAQZ,EAAMO,QAAQ,GACtBM,gBAAiBb,EAAMc,QAAQC,UAAUC,MAE7CC,KAAM,CACFC,MAAO,OACPb,UAAWL,EAAMO,QAAQ,IAG7BY,OAAQ,CACJP,OAAQZ,EAAMO,QAAQ,EAAG,EAAG,GAC5Ba,aAAc,QAElBC,KAAM,CACFhB,UAAW,OACXQ,gBAAiB,SAErBS,UAAW,CACPd,QAAS,QACTe,MAAO,WAITC,EAASC,MAAaC,MAAM,CAC9BC,SAAUF,MAELG,SAAS,8MACdC,SAAUJ,MAELG,SAAS,sNAGLE,EAAS,WAAO,IAAD,IAClBC,EAAUjC,IADQ,EAEiBkC,YAAQ,CAC7CC,SAAUC,YAAYV,GACtBW,KAAM,WAFHC,EAFiB,EAEjBA,SAAUC,EAFO,EAEPA,aAAcC,EAFP,EAEOA,OAFP,EAMQC,mBAAS,IANjB,mBAMjBZ,EANiB,KAMPa,EANO,OAOQD,mBAAS,IAPjB,mBAOjBV,EAPiB,KAOPY,EAPO,OAQQF,oBAAS,GARjB,mBAQjBG,EARiB,KAQPC,EARO,OASEJ,oBAAS,GATX,mBASjBK,EATiB,KASVC,EATU,KAsCxB,OAAIH,GAIAI,aAAaC,QAAQ,SAHd,cAAC,IAAD,CAAUC,GAAG,WASpB,eAACC,EAAA,EAAD,CAAWC,UAAWnB,EAAQ9B,UAAWkD,UAAU,OAAOjD,SAAS,KAAnE,UACI,cAACkD,EAAA,EAAD,IACA,sBAAKF,UAAWnB,EAAQzB,MAAxB,UACI,cAAC+C,EAAA,EAAD,CAAQH,UAAWnB,EAAQV,KAA3B,SACI,cAAC,IAAD,MAEJ,cAACiC,EAAA,EAAD,CAAYJ,UAAWnB,EAAQ3B,WAAY+C,UAAU,KAAKI,QAAQ,KAAlE,sDAGA,uBAAML,UAAWnB,EAAQd,KAAMuC,YAAU,EACnCC,SAAUpB,GArCX,SAACqB,EAAMC,GACpBA,EAAEC,iBACFC,IACKC,KAAKC,kEAA8B,CAACpC,WAAUE,aAC9CmC,MAAK,SAACC,GACHnB,aAAaoB,QAAQ,QAASD,EAAIP,KAAKS,OAEZ,MAAvBF,EAAIG,QAAQC,QACZ1B,GAAY,MAGnB2B,OAAM,SAACC,GACJC,QAAQC,IAAIF,EAAIG,SAChB7B,GAAS,SAuBT,UAEI,cAAC8B,EAAA,EAAD,CACIpB,QAAQ,WACR3C,OAAO,SACPgB,UAAQ,EACRgD,WAAS,EACTC,SAAUzC,EACV0C,GAAG,WACHC,MAAM,iCACNC,KAAK,WACLC,WAAS,EACTC,SAzDK,SAACvB,GACtBnB,EAAYmB,EAAEwB,OAAOC,OACrBZ,QAAQC,IAAI9C,IAwDIyD,MAAOzD,EACP0D,QAAS/C,EAAOX,SAChB2D,WAAU,OAAEhD,QAAF,IAAEA,GAAF,UAAEA,EAAQX,gBAAV,aAAE,EAAkB+C,QAC9Ba,aAAa,aAEjB,cAACZ,EAAA,EAAD,CACIpB,QAAQ,WACR3C,OAAO,SACPgB,UAAQ,EACRgD,WAAS,EACTC,SAAUzC,EACV4C,KAAK,WACLD,MAAM,uCACNS,KAAK,WACLV,GAAG,WACHS,aAAa,mBACbL,SArEK,SAACvB,GACtBlB,EAAYkB,EAAEwB,OAAOC,QAqELA,MAAOvD,EACPwD,QAAS/C,EAAOT,SAChByD,WAAU,OAAEhD,QAAF,IAAEA,GAAF,UAAEA,EAAQT,gBAAV,aAAE,EAAkB6C,UAElC,cAACe,EAAA,EAAD,CACID,KAAK,SACLZ,WAAS,EACTrB,QAAQ,YACRhC,MAAM,UACN2B,UAAWnB,EAAQZ,OALvB,0CASO,IAAVyB,GACD,mBAAGM,UAAWnB,EAAQT,UAAtB,4J,iHC9JHoE,EAAY,SAACC,GACtB,OACI,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,KAAK,QACL9C,UAAWyC,EAAMM,OAAOC,WACxB3E,MAAM,UACN4E,aAAW,SAEvB,cAAC7C,EAAA,EAAD,CAAYC,QAAQ,KAAKL,UAAWyC,EAAMM,OAAOG,MAAjD,4BAGA,cAACC,EAAA,EAAD,CAAOlD,UAAU,OAAOD,UAAWyC,EAAMM,OAAOK,KAAhD,SACI,cAACC,EAAA,EAAD,CACIrD,UAAWyC,EAAMM,OAAOO,MACxBC,YAAY,gBACZC,WAAY,CAAC,aAAc,eAC3BxB,SAAUS,EAAMgB,uBAGxB,cAAClB,EAAA,EAAD,CAAQlE,MAAM,UAAUqF,QAASjB,EAAMkB,gBAAvC,wBAGA,cAACpB,EAAA,EAAD,CAAQlE,MAAM,UAAUqF,QAASjB,EAAMmB,WAAvC,0B,iFCbHC,EAAa,SAACpB,GAEvB,OACI,cAACqB,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAUC,UAAU,EAApB,UACI,cAACC,EAAA,EAAD,CAAWC,MAAO,CAACpG,MAAO,OAAQ0F,QAAS,WACvCjB,EAAM4B,cAAc,OADxB,SAGI,eAACC,EAAA,EAAD,CAAgBC,cAAc,EAA9B,eAC2B,OAApB9B,EAAM+B,UAAqB/B,EAAMgC,YAAc,UAG1D,cAACN,EAAA,EAAD,CAAWC,MAAO,CAACpG,MAAO,OAAQ0F,QAAS,WACvCjB,EAAM4B,cAAc,aADxB,SAGI,eAACC,EAAA,EAAD,CAAgBC,cAAc,EAA9B,qBACiC,aAApB9B,EAAM+B,UAA2B/B,EAAMgC,YAAc,UAGtE,cAACN,EAAA,EAAD,CAAWC,MAAO,CAACpG,MAAO,OAAQ0F,QAAS,WACvCjB,EAAM4B,cAAc,eADxB,SAGI,eAACC,EAAA,EAAD,CAAgBC,cAAc,EAA9B,sBACkC,eAApB9B,EAAM+B,UAA6B/B,EAAMgC,YAAc,UAGzE,cAACN,EAAA,EAAD,CAAWC,MAAO,CAACpG,MAAO,OAAQ0F,QAAS,WACvCjB,EAAM4B,cAAc,cADxB,SAGI,eAACC,EAAA,EAAD,CAAgBC,cAAc,EAA9B,qBACiC,cAApB9B,EAAM+B,UAA4B/B,EAAMgC,YAAc,UAGvE,cAACN,EAAA,EAAD,CAAWC,MAAO,CAACpG,MAAO,OAAQ0F,QAAS,WACvCjB,EAAM4B,cAAc,cADxB,SAGI,eAACC,EAAA,EAAD,CAAgBC,cAAc,EAA9B,sBACkC,cAApB9B,EAAM+B,UAA4B/B,EAAMgC,YAAc,UAGxE,cAACN,EAAA,EAAD,CAAWC,MAAO,CAACpG,MAAO,OAAQ0F,QAAS,WACvCjB,EAAM4B,cAAc,iBADxB,SAGI,eAACC,EAAA,EAAD,CAAgBC,cAAc,EAA9B,yBACqC,iBAApB9B,EAAM+B,UAA+B/B,EAAMgC,YAAc,UAG9E,cAACN,EAAA,EAAD,2BAGR,cAACO,EAAA,EAAD,UACKjC,EAAMjC,KACFmE,QAAO,SAACC,GACL,MAAyB,KAArBnC,EAAMoC,YAECD,EAAInG,SAASqG,cAAcC,SAAStC,EAAMoC,WAAWC,eADrDF,OACJ,KAIVI,KAAI,SAACC,GAAD,OACD,eAAChB,EAAA,EAAD,CAAUP,QAAS,WACfjB,EAAMyC,eAAeD,EAAKrD,IAC1Ba,EAAM0C,mBAAmBF,IAF7B,UAII,cAACd,EAAA,EAAD,UAAYc,EAAKrD,KACjB,cAACuC,EAAA,EAAD,UAAYc,EAAKxG,WACjB,cAAC0F,EAAA,EAAD,UAAYc,EAAKG,aACjB,cAACjB,EAAA,EAAD,UAAYc,EAAKI,YACjB,cAAClB,EAAA,EAAD,UAAYc,EAAKK,UAAY,KAC7B,cAACnB,EAAA,EAAD,UAAYc,EAAKM,aAAe,KAChC,eAACpB,EAAA,EAAD,WACI,cAAC5B,EAAA,EAAD,CACI6B,MAAO,CAACpH,SAAU,OAAQwI,SAAU,QACpCC,KAAK,QAFT,SAGI,cAACC,EAAA,EAAD,CACIrH,MAAM,UACNqF,QAASjB,EAAMkD,oBACf3F,UAAWyC,EAAMM,OAAO6C,aAEhC,cAACrD,EAAA,EAAD,CACI6B,MAAO,CAACpH,SAAU,OAAQwI,SAAU,QACpCC,KAAK,QAFT,SAEiB,cAACI,EAAA,EAAD,CACbnC,QAASjB,EAAMqD,iBACf9F,UAAWyC,EAAMM,OAAOgD,oBApB5Bd,EAAKrD,e,oCCzE5BoE,GAAe,SAACvD,GAAW,IAAD,UACM3D,YAAQ,CAC7CC,SAAUC,YAAYyD,EAAMnE,UADzBY,EAD4B,EAC5BA,SAAUC,EADkB,EAClBA,aAAcC,EADI,EACJA,OAG/B,OACI,eAAC6G,EAAA,EAAD,CAAQC,KAAMzD,EAAMyD,KACZC,QAAS1D,EAAM2D,YACfC,kBAAgB,oBAFxB,UAGI,cAACC,EAAA,EAAD,CAAa1E,GAAG,oBAAhB,sBACA,eAAC2E,EAAA,EAAD,WACI,uBAAMvG,UAAWyC,EAAMM,OAAOhF,KAAMuC,YAAU,EACxCC,SAAUpB,EAAasD,EAAMlC,UADnC,UAEI,eAACiG,EAAA,EAAD,CAAMzJ,WAAS,EAACM,QAAS,EAAzB,UACI,cAACmJ,EAAA,EAAD,CAAMvB,MAAI,EAACwB,GAAI,GAAIC,GAAI,EAAvB,SACI,cAACjF,EAAA,EAAD,CACIK,KAAK,YACLzB,QAAQ,WACRqB,WAAS,EACTE,GAAG,YACHC,MAAM,aACNE,WAAS,EACTJ,SAAUzC,EACViD,QAAS/C,EAAOuH,UAChBvE,WAAU,OAAEhD,QAAF,IAAEA,GAAF,UAAEA,EAAQuH,iBAAV,aAAE,EAAmBnF,YAGvC,cAACgF,EAAA,EAAD,CAAMvB,MAAI,EAACwB,GAAI,GAAIC,GAAI,EAAvB,SACI,cAACjF,EAAA,EAAD,CACIpB,QAAQ,WACRqB,WAAS,EACTE,GAAG,WACHC,MAAM,YACNC,KAAK,WACLH,SAAUzC,EACViD,QAAS/C,EAAOwH,SAChBxE,WAAU,OAAEhD,QAAF,IAAEA,GAAF,UAAEA,EAAQwH,gBAAV,aAAE,EAAkBpF,YAGtC,cAACgF,EAAA,EAAD,CAAMvB,MAAI,EAACwB,GAAI,GAAf,SACI,cAAChF,EAAA,EAAD,CACIpB,QAAQ,WACRqB,WAAS,EACTE,GAAG,WACHC,MAAM,WACNC,KAAK,WACLH,SAAUzC,EACViD,QAAS/C,EAAOX,SAChB2D,WAAU,OAAEhD,QAAF,IAAEA,GAAF,UAAEA,EAAQX,gBAAV,aAAE,EAAkB+C,YAGtC,cAACgF,EAAA,EAAD,CAAMvB,MAAI,EAACwB,GAAI,GAAf,SACI,cAAChF,EAAA,EAAD,CACIpB,QAAQ,WACRqB,WAAS,EACTI,KAAK,WACLD,MAAM,WACNS,KAAK,WACLV,GAAG,WACHS,aAAa,mBACbV,SAAUzC,EACViD,QAAS/C,EAAOT,SAChByD,WAAU,OAAEhD,QAAF,IAAEA,GAAF,UAAEA,EAAQT,gBAAV,aAAE,EAAkB6C,eAI1C,cAACe,EAAA,EAAD,CACID,KAAK,SACLZ,WAAS,EACTrB,QAAQ,YACRhC,MAAM,UACN2B,UAAWyC,EAAMM,OAAO9E,OAL5B,iBASA,cAACsE,EAAA,EAAD,CAAQmB,QAASjB,EAAM2D,YACf/H,MAAM,UACNgC,QAAQ,YACRqB,WAAS,EACT1B,UAAWyC,EAAMM,OAAO8D,OAJhC,wBASiB,IAApBpE,EAAMqE,WAAuB,mBAAG9G,UAAWyC,EAAMM,OAAOgE,UAA3B,6DClFjCC,GAAgB,SAACvE,GAAW,IAAD,UACwC3D,YAAQ,CAChFC,SAAUC,YAAYyD,EAAMnE,UADf2I,EADmB,EAC7B/H,SAA6BgI,EADA,EACR9H,OAA+B+H,EADvB,EACShI,aAG7C,OACI,eAAC8G,EAAA,EAAD,CAAQC,KAAMzD,EAAM2E,SAAUjB,QAAS1D,EAAM4E,gBAAiBhB,kBAAgB,oBAA9E,UACI,eAACC,EAAA,EAAD,CAAa1E,GAAG,oBAAhB,+BAAuDa,EAAM6E,eAC7D,cAACf,EAAA,EAAD,UACI,uBAAMvG,UAAWyC,EAAMM,OAAOhF,KAAMuC,YAAU,EACxCC,SAAU4G,EAAc1E,EAAM8E,cADpC,UAEI,eAACf,EAAA,EAAD,CAAMzJ,WAAS,EAACM,QAAS,EAAzB,UACI,cAACmJ,EAAA,EAAD,CAAMvB,MAAI,EAACwB,GAAI,GAAIC,GAAI,EAAvB,SACI,cAACjF,EAAA,EAAD,CACI+F,aAAc/E,EAAMgF,gBAAgBrC,WACpCtD,KAAK,YACLzB,QAAQ,WACRqB,WAAS,EACTE,GAAG,YACHC,MAAM,aACNE,WAAS,EACTJ,SAAUsF,EACV9E,QAAS+E,EAAQP,UACjBvE,WAAU,OAAE8E,QAAF,IAAEA,GAAF,UAAEA,EAASP,iBAAX,aAAE,EAAoBnF,YAGxC,cAACgF,EAAA,EAAD,CAAMvB,MAAI,EAACwB,GAAI,GAAIC,GAAI,EAAvB,SACI,cAACjF,EAAA,EAAD,CACIpB,QAAQ,WACRqB,WAAS,EACT8F,aAAc/E,EAAMgF,gBAAgBpC,UACpCzD,GAAG,WACHC,MAAM,YACNC,KAAK,WACLH,SAAUsF,EACV9E,QAAS+E,EAAQN,SACjBxE,WAAU,OAAE8E,QAAF,IAAEA,GAAF,UAAEA,EAASN,gBAAX,aAAE,EAAmBpF,YAGvC,cAACgF,EAAA,EAAD,CAAMvB,MAAI,EAACwB,GAAI,GAAf,SACI,cAAChF,EAAA,EAAD,CACIpB,QAAQ,WACRqB,WAAS,EACT8F,aAAc/E,EAAMgF,gBAAgBhJ,SACpCmD,GAAG,WACHC,MAAM,WACNC,KAAK,WACLH,SAAUsF,EACV9E,QAAS+E,EAAQzI,SACjB2D,WAAU,OAAE8E,QAAF,IAAEA,GAAF,UAAEA,EAASzI,gBAAX,aAAE,EAAmB+C,YAGvC,cAACgF,EAAA,EAAD,CAAMvB,MAAI,EAACwB,GAAI,GAAf,SACI,cAAChF,EAAA,EAAD,CACIpB,QAAQ,WACRqB,WAAS,EACTI,KAAK,WACLD,MAAM,WACNS,KAAK,WACLV,GAAG,WACHS,aAAa,mBACbV,SAAUsF,EACV9E,QAAS+E,EAAQvI,SACjByD,WAAU,OAAE8E,QAAF,IAAEA,GAAF,UAAEA,EAASvI,gBAAX,aAAE,EAAmB6C,eAI3C,cAACe,EAAA,EAAD,CACID,KAAK,SACLZ,WAAS,EACTrB,QAAQ,YACRhC,MAAM,UACN2B,UAAWyC,EAAMM,OAAO9E,OAL5B,kBASA,cAACsE,EAAA,EAAD,CAAQmB,QAASjB,EAAM4E,gBACfhJ,MAAM,UACNgC,QAAQ,YACRqB,WAAS,EACT1B,UAAWyC,EAAMM,OAAO8D,OAJhC,6B,UC9EPa,GAAkB,SAACjF,GAC5B,OACI,eAACwD,EAAA,EAAD,CACIC,KAAMzD,EAAMkF,WACZC,aAAW,EACXvB,kBAAgB,2BAChBwB,mBAAiB,iCAJrB,UAMI,eAACvB,EAAA,EAAD,CAAa1E,GAAG,2BAAhB,uBAAsDa,EAAM6E,YAA5D,OACA,eAACQ,GAAA,EAAD,WACI,cAACvF,EAAA,EAAD,CAAQmB,QAASjB,EAAMsF,kBAAmB1J,MAAM,UACxCgC,QAAQ,YADhB,oBAIA,cAACkC,EAAA,EAAD,CAAQmB,QAASjB,EAAMuF,iBAAkB3J,MAAM,UACvCgC,QAAQ,YADhB,2BCJVzD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCmL,IAAK,CACDzC,SAAU,QACVxI,SAAU,SACVU,OAAQ,SACRwK,OAAQ,SACRjL,UAAW,yCAEfc,KAAM,CACFC,MAAO,OACPb,UAAWL,EAAMO,QAAQ,IAE7B0J,UAAW,CACPzJ,QAAS,OACTe,MAAO,MACP8J,eAAgB,UAEpBlK,OAAQ,CACJP,OAAQZ,EAAMO,QAAQ,EAAG,EAAG,IAEhCwJ,OAAQ,CACJnJ,OAAQZ,EAAMO,QAAQ,EAAG,EAAG,GAC5BF,UAAW,OAEfyI,SAAS,CACLwC,OAAQ,WAEZrC,WAAY,CACR1H,MAAO,MACP+J,OAAQ,WAEZC,MAAO,CACH1F,SAAU,WACV2F,WAAY,QAEhBC,cAAc,CACVvK,MAAO,QAEXgF,WAAY,CACRwF,YAAa,KAEjBtF,MAAO,CACHuF,SAAU,EACVH,WAAY,SAEhBlF,KAAM,CACFsF,QAAS,UACTpL,QAAS,OACTE,WAAY,SACZQ,MAAO,IACPwK,YAAa,IAEjBlF,MAAO,CACHgF,WAAYxL,EAAMO,QAAQ,GAC1BsL,KAAM,OAIRrK,GAASC,MAAaC,MAAM,CAC9BC,SAAUF,MAELG,SAAS,gCACTkK,IAAI,KACJC,QAAQ,cAAe,4DAC5BlK,SAAUJ,MAELG,SAAS,gCACTkK,IAAI,KACJC,QAAQ,6BAA8B,2GAC3ClC,UAAWpI,MAENG,SAAS,iCACTkK,IAAI,IACThC,SAAUrI,MAELG,SAAS,gCACTkK,IAAI,OAGAE,GAAO,WAChB,IAAM/F,EAAQnG,KADQ,EAEEyC,mBAAS,IAFX,mBAEfmB,EAFe,KAETuI,EAFS,OAGE1J,oBAAS,GAHX,mBAGf6G,EAHe,KAGT8C,EAHS,OAIU3J,oBAAS,GAJnB,mBAIf+H,EAJe,KAIL6B,EAJK,OAKU5J,oBAAS,GALnB,mBAKf6J,EALe,KAKLC,EALK,OAMU9J,oBAAS,GANnB,mBAMfG,EANe,KAMLC,EANK,OAOQJ,oBAAS,GAPjB,mBAOf+J,EAPe,KAONC,EAPM,OAQchK,mBAAS,IARvB,mBAQfwF,EARe,KAQHyE,EARG,OASgBjK,mBAAS,IATzB,mBASfiI,EATe,KASFpC,EATE,OAUwB7F,mBAAS,IAVjC,mBAUfoI,EAVe,KAUEtC,EAVF,OAWc9F,oBAAS,GAXvB,mBAWfsI,EAXe,KAWH4B,EAXG,OAYYlK,mBAAS,IAZrB,mBAYfmF,GAZe,KAYJgF,GAZI,QAaYnK,oBAAS,GAbrB,qBAafyH,GAbe,MAaJ2C,GAbI,MAchB5I,GAAU,kDAEhB6I,qBAAU,WACN,IAAMC,EAAS,CACXC,QAAS,CACLC,cAAe,SAAWjK,aAAaC,QAAQ,WAGvDc,IACKmJ,IAAIjJ,GAAU,iBAAkB8I,GAChC7I,MAAK,SAACC,GACHgI,EAAQhI,EAAIP,WAErB,IACH,IAQMuJ,GAAa,WACf,IAAMJ,EAAS,CACXC,QAAS,CACLC,cAAe,SAAWjK,aAAaC,QAAQ,WAGvDc,IACKmJ,IAAIjJ,GAAU,iBAAkB8I,GAChC7I,MAAK,SAACC,GACHgI,EAAQhI,EAAIP,UAmIxB,OAAIhB,EACO,cAAC,IAAD,CAAUM,GAAG,MAIpB,sBAAKE,UAAW+C,EAAOkF,IAAvB,UACI,cAAC,EAAD,CAAWlF,OAAQA,EACRa,WA3JA,SAACnD,GAChBA,EAAEC,iBACFd,aAAaoK,WAAW,SACxBvK,GAAY,IAyJGkE,gBA3GK,WACpBqF,GAAQ,IA2GOvF,mBAxJQ,SAAChD,GACxB6I,EAAc7I,EAAEwB,OAAOC,UAyJnB,cAAC,EAAD,CAAYa,OAAQA,EACR0B,YA3HA,WAChB,OACI2E,EAAU,cAAC,IAAD,CAAmBpJ,UAAW+C,EAAOsF,QAAW,cAAC,IAAD,CAAiBrI,UAAW+C,EAAOsF,SA0HjFhE,cAvHE,SAAC4F,IApBN,SAACA,GACd,IACIC,EADEC,EAAQ,YAAO3J,GAEjB4I,IACAc,EAAWC,EAASC,MAChB,SAACC,EAAGC,GAAO,OAAOD,EAAEJ,GAAOM,WAAWzF,cACpCwF,EAAEL,GAAOM,WAAWzF,cAAgB,GAAK,MAEjDoF,EAAWC,EAASK,SAClB,SAACH,EAAGC,GAAO,OAAOD,EAAEJ,GAAOM,WAAWzF,cACpCwF,EAAEL,GAAOM,WAAWzF,cAAgB,GAAK,KAE/CiE,EAAQmB,GACRb,GAAYD,GAQZc,CAASD,GACTT,GAAaS,IAsHGzF,UAAWA,GACXhE,KAAMA,EACNqE,WAAYA,EACZK,eAAgBA,EAChBC,mBAAoBA,EACpBQ,oBAnFQ,WACxBsD,GAAY,IAmFInD,iBAlDK,WACrByD,GAAc,MAqDV,cAAC,GAAD,CAAcnD,YAxHF,WAChB4C,GAAQ,GACRS,IAAa,IAuHK1G,OAAQA,EACRxC,SAtHL,SAACC,EAAMC,GACpB,IAAMkJ,EAAS,CACXC,QAAS,CACLC,cAAe,SAAWjK,aAAaC,QAAQ,WAGvDY,EAAEC,iBACFyI,GAAY,GACZxI,IACKC,KAAKC,GAAU,iBAAkB,CAACpC,SAAU+B,EAAK/B,SAAUE,SAAU6B,EAAK7B,SAAUyG,WAAY5E,EAAKmG,UAAWtB,UAAW7E,EAAKoG,SAAUtB,UAAW4D,GAAWS,GAChK7I,MAAK,SAACC,GACH0J,IAAK,CACDtM,KAAM,UACN+E,MAAO,0BAEX6G,QAEHjJ,MAAK,WACFkI,GAAQ,MAEX5H,OAAM,SAACC,GACJC,QAAQC,IAAIF,EAAIqJ,SAASlK,KAAK/B,SAAS,IACvCgL,GAAapI,EAAIqJ,SAASlK,KAAK/B,SAAS,QAiG9BH,OAAQA,GACR4H,KAAMA,EACNY,UAAWA,KAKzB,cAAC,GAAD,CAAe/D,OAAQA,EACRqE,SAAUA,EACVC,gBAjGC,WACpB4B,GAAY,IAiGO3B,YAAaA,EACbhJ,OAAQA,GACRiJ,aAjGF,SAAC/G,EAAMC,GACxB,IAAMkJ,EAAS,CACXC,QAAS,CACLC,cAAe,SAAWjK,aAAaC,QAAQ,WAGvDY,EAAEC,iBACFyI,GAAY,GACZxI,IACKgK,MAAM9J,GAAU,iBAAV,UAAgCyG,EAAhC,KAAgD,CAAC7I,SAAU+B,EAAK/B,SAAU2G,WAAY5E,EAAKmG,UAAWtB,UAAW7E,EAAKoG,SAAUjI,SAAS6B,EAAK7B,SAAU2G,UAAW4D,GAAWS,GACpL7I,MAAK,SAACC,GACH0J,IAAK,CACDtM,KAAM,UACN+E,MAAO,yBAEXsG,GAAa,IACbO,QAEHjJ,MAAK,WACFmI,GAAY,MAEf7H,OAAM,SAACC,GACJC,QAAQC,IAAIF,EAAIG,aA4ELiG,gBAAiBA,IAKhC,cAAC,GAAD,CAAiBE,WAAYA,EACZL,YAAaA,EACbS,kBA1EC,WACtBwB,GAAc,IA0EOvB,iBAxEA,SAACvH,GACtB,IAAMkJ,EAAS,CACXC,QAAS,CACLC,cAAe,SAAWjK,aAAaC,QAAQ,WAGvDY,EAAEC,iBACFC,IACKiK,OAAO/J,GAAU,iBAAV,UAAgCyG,EAAhC,KAAgDqC,GACvD7I,MAAK,SAACC,GACHwI,GAAc,GACdkB,IAAK,CACDtM,KAAM,UACN+E,MAAO,yBAEXsG,GAAa,IACbO,QAEH3I,OAAM,SAACC,GACJC,QAAQC,IAAIF,EAAIG,mBCvPjBqJ,OAbf,WACI,OACI,8BACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAI9K,UAAWrB,IACjC,cAAC,IAAD,CAAOmM,KAAK,SAAS9K,UAAW6I,aCNpDkC,IAASC,OACL,cAAC,GAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.520ec0fd.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useForm} from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport axios from \"axios\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Avatar,} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        maxWidth: \"500px\",\r\n        boxShadow: '0px 0px 8px 0px rgba(34, 60, 80, 0.2)',\r\n    },\r\n    typography: {\r\n        marginTop: \"10px\"\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        marginBottom: \"20px\"\r\n    },\r\n    icon: {\r\n        marginTop: \"20px\",\r\n        backgroundColor: \"green\"\r\n    },\r\n    wrongCred: {\r\n        display: \"block\",\r\n        color: \"red\"\r\n    }\r\n}));\r\n\r\nconst schema = yup.object().shape({\r\n    username: yup\r\n        .string()\r\n        .required(\"Поле Логин обязательно для заполнения\"),\r\n    password: yup\r\n        .string()\r\n        .required(\"Поле Пароль обязательно для заполнения\")\r\n})\r\n\r\nexport const SignIn = () => {\r\n    const classes = useStyles();\r\n    const {register, handleSubmit, errors} = useForm({\r\n        resolver: yupResolver(schema),\r\n        mode: \"onBlur\"\r\n    })\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [redirect, setRedirect] = useState(false)\r\n    const [wrong, setWrong] = useState(false)\r\n    const baseUrl = 'https://emphasoft-test-assignment.herokuapp.com'\r\n\r\n    const onChangeUsername = (e) => {\r\n        setUsername(e.target.value)\r\n        console.log(username)\r\n    }\r\n\r\n    const onChangePassword = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const onSubmit = (data, e) => {\r\n        e.preventDefault()\r\n        axios\r\n            .post(baseUrl + '/api-token-auth/', {username, password})\r\n            .then((res) => {\r\n                localStorage.setItem('token', res.data.token)\r\n\r\n                if (res.request.status === 200) {\r\n                    setRedirect(true)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.message)\r\n                setWrong(true)\r\n        })\r\n    }\r\n\r\n    if (redirect) {\r\n        return <Redirect to='/users' />\r\n    }\r\n\r\n    if (localStorage.getItem('token')) {\r\n        return <Redirect to='/users' />\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className={classes.container} component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.icon}>\r\n                    <LockIcon />\r\n                </Avatar>\r\n                <Typography className={classes.typography} component=\"h1\" variant=\"h5\">\r\n                    Войти в IT\r\n                </Typography>\r\n                <form className={classes.form} noValidate\r\n                      onSubmit={handleSubmit(onSubmit)}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        inputRef={register}\r\n                        id=\"username\"\r\n                        label=\"Логин\"\r\n                        name=\"username\"\r\n                        autoFocus\r\n                        onChange={onChangeUsername}\r\n                        value={username}\r\n                        error={!!errors.username}\r\n                        helperText={errors?.username?.message}\r\n                        autoComplete=\"username\"\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        inputRef={register}\r\n                        name=\"password\"\r\n                        label=\"Пароль\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={onChangePassword}\r\n                        value={password}\r\n                        error={!!errors.password}\r\n                        helperText={errors?.password?.message}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >Вход\r\n                    </Button>\r\n                </form>\r\n                {wrong === true &&\r\n                <p className={classes.wrongCred}>Неверный логин или пароль</p>}\r\n            </div>\r\n        </Container>\r\n    );\r\n}","import {AppBar, Button, IconButton, InputBase, Paper, Toolbar} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\n\r\nexport const AppHeader = (props) => {\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <IconButton edge=\"start\"\r\n                            className={props.styles.menuButton}\r\n                            color=\"inherit\"\r\n                            aria-label=\"menu\">\r\n                </IconButton>\r\n                <Typography variant=\"h6\" className={props.styles.title}>\r\n                    Awesome Table!\r\n                </Typography>\r\n                <Paper component=\"form\" className={props.styles.root}>\r\n                    <InputBase\r\n                        className={props.styles.input}\r\n                        placeholder=\"Type username\"\r\n                        inputProps={{'aria-label': 'search here'}}\r\n                        onChange={props.handleChangeSearch}\r\n                    />\r\n                </Paper>\r\n                <Button color=\"inherit\" onClick={props.handleClickOpen}>\r\n                    + Add user\r\n                </Button>\r\n                <Button color=\"inherit\" onClick={props.handleExit}>Logout</Button>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import {\r\n    Button,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    TableSortLabel\r\n} from \"@material-ui/core\";\r\nimport {Delete, Edit} from \"@material-ui/icons\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const DataTables = (props) => {\r\n\r\n    return (\r\n        <TableContainer>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow selected={true}>\r\n                        <TableCell style={{width: \"10%\"}} onClick={() => {\r\n                            props.fieldSortData('id')\r\n                        }}>\r\n                            <TableSortLabel hideSortIcon={true}>\r\n                                ID{props.fieldData === \"id\" ? props.chooseArrow : null}\r\n                            </TableSortLabel>\r\n                        </TableCell>\r\n                        <TableCell style={{width: \"15%\"}} onClick={() => {\r\n                            props.fieldSortData('username')\r\n                        }}>\r\n                            <TableSortLabel hideSortIcon={true}>\r\n                                Username{props.fieldData === \"username\" ? props.chooseArrow : null}\r\n                            </TableSortLabel>\r\n                        </TableCell>\r\n                        <TableCell style={{width: \"15%\"}} onClick={() => {\r\n                            props.fieldSortData('first_name')\r\n                        }}>\r\n                            <TableSortLabel hideSortIcon={true}>\r\n                                Firstname{props.fieldData === \"first_name\" ? props.chooseArrow : null}\r\n                            </TableSortLabel>\r\n                        </TableCell>\r\n                        <TableCell style={{width: \"15%\"}} onClick={() => {\r\n                            props.fieldSortData('last_name')\r\n                        }}>\r\n                            <TableSortLabel hideSortIcon={true}>\r\n                                Lastname{props.fieldData === \"last_name\" ? props.chooseArrow : null}\r\n                            </TableSortLabel>\r\n                        </TableCell>\r\n                        <TableCell style={{width: \"15%\"}} onClick={() => {\r\n                            props.fieldSortData('is_active')\r\n                        }}>\r\n                            <TableSortLabel hideSortIcon={true}>\r\n                                Is active{props.fieldData === \"is_active\" ? props.chooseArrow : null}\r\n                            </TableSortLabel>\r\n                        </TableCell>\r\n                        <TableCell style={{width: \"15%\"}} onClick={() => {\r\n                            props.fieldSortData('is_superuser')\r\n                        }}>\r\n                            <TableSortLabel hideSortIcon={true}>\r\n                                Is superuser{props.fieldData === \"is_superuser\" ? props.chooseArrow : null}\r\n                            </TableSortLabel>\r\n                        </TableCell>\r\n                        <TableCell>Actions</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {props.data\r\n                        .filter((val) => {\r\n                            if (props.searchTerm === '') {\r\n                                return val\r\n                            } else if (val.username.toLowerCase().includes(props.searchTerm.toLowerCase())) {\r\n                                return val\r\n                            }\r\n                        })\r\n                        .map((item) => (\r\n                            <TableRow onClick={() => {\r\n                                props.setSelectedRow(item.id)\r\n                                props.setSelectedRowData(item)\r\n                            }} key={item.id}>\r\n                                <TableCell>{item.id}</TableCell>\r\n                                <TableCell>{item.username}</TableCell>\r\n                                <TableCell>{item.first_name}</TableCell>\r\n                                <TableCell>{item.last_name}</TableCell>\r\n                                <TableCell>{item.is_active + ''}</TableCell>\r\n                                <TableCell>{item.is_superuser + ''}</TableCell>\r\n                                <TableCell>\r\n                                    <Button\r\n                                        style={{maxWidth: '30px', minWidth: '30px'}}\r\n                                        size=\"small\">\r\n                                        <Edit\r\n                                            color=\"primary\"\r\n                                            onClick={props.handleClickOpenEdit}\r\n                                            className={props.styles.iconEdit}/>\r\n                                    </Button>\r\n                                    <Button\r\n                                        style={{maxWidth: '30px', minWidth: '30px'}}\r\n                                        size=\"small\"><Delete\r\n                                        onClick={props.handleOpenDelete}\r\n                                        className={props.styles.iconDelete}/>\r\n                                    </Button>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}","import {Button, Dialog, DialogContent, DialogTitle, TextField} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport React from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\n\r\nexport const AddUserPopup = (props) => {\r\n    const {register, handleSubmit, errors} = useForm({\r\n        resolver: yupResolver(props.schema),\r\n    })\r\n    return (\r\n        <Dialog open={props.open}\r\n                onClose={props.handleClose}\r\n                aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">New user</DialogTitle>\r\n            <DialogContent>\r\n                <form className={props.styles.form} noValidate\r\n                      onSubmit={handleSubmit(props.onSubmit)}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                name=\"firstname\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                id=\"firstname\"\r\n                                label=\"First Name\"\r\n                                autoFocus\r\n                                inputRef={register}\r\n                                error={!!errors.firstname}\r\n                                helperText={errors?.firstname?.message}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                id=\"lastname\"\r\n                                label=\"Last Name\"\r\n                                name=\"lastname\"\r\n                                inputRef={register}\r\n                                error={!!errors.lastname}\r\n                                helperText={errors?.lastname?.message}>\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                label=\"Username\"\r\n                                name=\"username\"\r\n                                inputRef={register}\r\n                                error={!!errors.username}\r\n                                helperText={errors?.username?.message}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                inputRef={register}\r\n                                error={!!errors.password}\r\n                                helperText={errors?.password?.message}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={props.styles.submit}\r\n                    >\r\n                        Add\r\n                    </Button>\r\n                    <Button onClick={props.handleClose}\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            fullWidth\r\n                            className={props.styles.cancel}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </form>\r\n                {props.errorUser !== false && <p className={props.styles.userExist}>A user with that username already exists</p>}\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}","import {Button, Dialog, DialogContent, DialogTitle, TextField} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport React from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\n\r\n\r\nexport const EditUserPopup = (props) => {\r\n    const {register: register2, errors: errors2, handleSubmit: handleSubmit2} = useForm({\r\n        resolver: yupResolver(props.schema)\r\n    })\r\n    return (\r\n        <Dialog open={props.openEdit} onClose={props.handleCloseEdit} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Edit user with ID {props.selectedRow}</DialogTitle>\r\n            <DialogContent>\r\n                <form className={props.styles.form} noValidate\r\n                      onSubmit={handleSubmit2(props.onSubmitEdit)}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                defaultValue={props.selectedRowData.first_name}\r\n                                name=\"firstname\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                id=\"firstname\"\r\n                                label=\"First Name\"\r\n                                autoFocus\r\n                                inputRef={register2}\r\n                                error={!!errors2.firstname}\r\n                                helperText={errors2?.firstname?.message}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                defaultValue={props.selectedRowData.last_name}\r\n                                id=\"lastname\"\r\n                                label=\"Last Name\"\r\n                                name=\"lastname\"\r\n                                inputRef={register2}\r\n                                error={!!errors2.lastname}\r\n                                helperText={errors2?.lastname?.message}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                defaultValue={props.selectedRowData.username}\r\n                                id=\"username\"\r\n                                label=\"Username\"\r\n                                name=\"username\"\r\n                                inputRef={register2}\r\n                                error={!!errors2.username}\r\n                                helperText={errors2?.username?.message}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                inputRef={register2}\r\n                                error={!!errors2.password}\r\n                                helperText={errors2?.password?.message}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={props.styles.submit}\r\n                    >\r\n                        Done\r\n                    </Button>\r\n                    <Button onClick={props.handleCloseEdit}\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            fullWidth\r\n                            className={props.styles.cancel}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </form>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}","import {Button, Dialog, DialogActions, DialogTitle} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const DeleteUserPopup = (props) => {\r\n    return (\r\n        <Dialog\r\n            open={props.openDelete}\r\n            keepMounted\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Delete ID {props.selectedRow}?</DialogTitle>\r\n            <DialogActions>\r\n                <Button onClick={props.handleCloseDelete} color=\"primary\"\r\n                        variant=\"contained\">\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={props.handleDeleteUser} color=\"primary\"\r\n                        variant=\"contained\">\r\n                    Delete\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport axios from \"axios\";\r\nimport {makeStyles} from '@material-ui/core';\r\nimport swal from \"sweetalert\";\r\nimport * as yup from \"yup\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport {AppHeader} from \"./AppHeader\";\r\nimport {DataTables} from \"./DataTable\";\r\nimport {AddUserPopup} from \"./AddUserPopup\";\r\nimport {EditUserPopup} from \"./EditUserPopup\";\r\nimport {DeleteUserPopup} from \"./DeleteUserPopup\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    app: {\r\n        minWidth: \"600px\",\r\n        maxWidth: \"1000px\",\r\n        margin: \"0 auto\",\r\n        height: \"1000px\",\r\n        boxShadow: \"0px 0px 8px 0px rgba(34, 60, 80, 0.2)\",\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    userExist: {\r\n        display: \"flex\",\r\n        color: \"red\",\r\n        justifyContent: \"center\",\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    cancel: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        marginTop: \"0px\"\r\n    },\r\n    iconEdit:{\r\n        cursor: 'pointer'\r\n    },\r\n    iconDelete: {\r\n        color: \"red\",\r\n        cursor: 'pointer',\r\n    },\r\n    arrow: {\r\n        position: \"absolute\",\r\n        marginLeft: \"100%\"\r\n    },\r\n    inputMaterial:{\r\n        width: '100%'\r\n    },\r\n    menuButton: {\r\n        marginRight: \"0\",\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        marginLeft: \"-20px\"\r\n    },\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 200,\r\n        marginRight: 10,\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n\r\n}));\r\nconst schema = yup.object().shape({\r\n    username: yup\r\n        .string()\r\n        .required(\"Username is a required field\")\r\n        .max(150)\r\n        .matches(/^[\\w.@+-]+$/, \"Username can contain numbers, letters or @/./+/-/_ only \"),\r\n    password: yup\r\n        .string()\r\n        .required(\"Password is a required field\")\r\n        .max(128)\r\n        .matches(/^(?=.*[A-Z])(?=.*\\d).{8,}$/, \"Password must be at least 8 characters, including a number, an uppercase letter, and a lowercase letter\"),\r\n    firstname: yup\r\n        .string()\r\n        .required(\"Firstname is a required field\")\r\n        .max(30),\r\n    lastname: yup\r\n        .string()\r\n        .required(\"Lastname is a required field\")\r\n        .max(150),\r\n})\r\n\r\nexport const Main = () => {\r\n    const styles= useStyles();\r\n    const [data, setData] = useState([])\r\n    const [open, setOpen] = useState(false)\r\n    const [openEdit, setOpenEdit] = useState(false)\r\n    const [isActive, setIsActive] = useState(false)\r\n    const [redirect, setRedirect] = useState(false)\r\n    const [sortDir, setSortDir] = useState(true)\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n    const [selectedRow, setSelectedRow] = useState([])\r\n    const [selectedRowData, setSelectedRowData] = useState('')\r\n    const [openDelete, setOpenDelete] = useState(false)\r\n    const [fieldData, setFieldData] = useState('')\r\n    const [errorUser, setErrorUser] = useState(false)\r\n    const baseUrl = 'https://emphasoft-test-assignment.herokuapp.com'\r\n\r\n    useEffect(() => {\r\n        const config = {\r\n            headers: {\r\n                Authorization: 'Token ' + localStorage.getItem('token')\r\n            }\r\n        }\r\n        axios\r\n            .get(baseUrl + '/api/v1/users/', config)\r\n            .then((res) => {\r\n                setData(res.data)\r\n            })\r\n    }, [])\r\n    const handleExit = (e) => {\r\n        e.preventDefault()\r\n        localStorage.removeItem('token')\r\n        setRedirect(true)\r\n    }\r\n    const handleChangeSearch = (e) => {\r\n        setSearchTerm(e.target.value)\r\n    }\r\n    const updateData = () => {\r\n        const config = {\r\n            headers: {\r\n                Authorization: 'Token ' + localStorage.getItem('token')\r\n            }\r\n        }\r\n        axios\r\n            .get(baseUrl + '/api/v1/users/', config)\r\n            .then((res) => {\r\n                setData(res.data)\r\n            })\r\n    }\r\n\r\n    //Start sorting stuff\r\n    const sortData = (field) => {\r\n        const copyData = [...data]\r\n        let sortData\r\n        if (sortDir) {\r\n            sortData = copyData.sort(\r\n                (a, b) => {return a[field].toString().toLowerCase()\r\n                > b[field].toString().toLowerCase() ? 1 : -1}\r\n            )\r\n        } sortData = copyData.reverse(\r\n            (a, b) => {return a[field].toString().toLowerCase()\r\n            > b[field].toString().toLowerCase() ? 1 : -1}\r\n        )\r\n        setData(sortData)\r\n        setSortDir(!sortDir)\r\n    }\r\n    const chooseArrow = () => {\r\n        return (\r\n            sortDir ? <ArrowDropDownIcon className={styles.arrow}/> : <ArrowDropUpIcon className={styles.arrow}/>\r\n        )\r\n    }\r\n    const fieldSortData = (field) => {\r\n        sortData(field)\r\n        setFieldData(field)\r\n    }\r\n    // End sorting stuff\r\n\r\n    //Add popup\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n        setErrorUser(false)\r\n    }\r\n    const onSubmit = (data, e) => {\r\n        const config = {\r\n            headers: {\r\n                Authorization: 'Token ' + localStorage.getItem('token')\r\n            }\r\n        }\r\n        e.preventDefault()\r\n        setIsActive(true)\r\n        axios\r\n            .post(baseUrl + '/api/v1/users/', {username: data.username, password: data.password, first_name: data.firstname, last_name: data.lastname, is_active: isActive}, config)\r\n            .then((res) => {\r\n                swal({\r\n                    icon: \"success\",\r\n                    title: \"The user was created!\"\r\n                })\r\n                updateData()\r\n            })\r\n            .then(() => {\r\n                setOpen(false)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response.data.username[0])\r\n                setErrorUser(err.response.data.username[0])\r\n            })\r\n    }\r\n    //End add popup\r\n\r\n    //Edit popup\r\n    const handleClickOpenEdit = () => {\r\n        setOpenEdit(true)\r\n    };\r\n    const handleCloseEdit = () => {\r\n        setOpenEdit(false)\r\n    }\r\n    const onSubmitEdit = (data, e) => {\r\n        const config = {\r\n            headers: {\r\n                Authorization: 'Token ' + localStorage.getItem('token')\r\n            }\r\n        }\r\n        e.preventDefault()\r\n        setIsActive(true)\r\n        axios\r\n            .patch(baseUrl + '/api/v1/users/' + `${selectedRow}/`, {username: data.username, first_name: data.firstname, last_name: data.lastname, password:data.password, is_active: isActive}, config)\r\n            .then((res) => {\r\n                swal({\r\n                    icon: \"success\",\r\n                    title: \"The user is updated!\"\r\n                })\r\n                setFieldData('')\r\n                updateData()\r\n            })\r\n            .then(() => {\r\n                setOpenEdit(false)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.message)\r\n            })\r\n    }\r\n    //End edit popup\r\n\r\n    //Delete popup\r\n    const handleOpenDelete = () => {\r\n        setOpenDelete(true)\r\n    }\r\n    const handleCloseDelete = () => {\r\n        setOpenDelete(false)\r\n    }\r\n    const handleDeleteUser = (e) => {\r\n        const config = {\r\n            headers: {\r\n                Authorization: 'Token ' + localStorage.getItem('token')\r\n            }\r\n        }\r\n        e.preventDefault()\r\n        axios\r\n            .delete(baseUrl + '/api/v1/users/' + `${selectedRow}/`, config)\r\n            .then((res) => {\r\n                setOpenDelete(false)\r\n                swal({\r\n                    icon: \"success\",\r\n                    title: \"The user is deleted!\"\r\n                })\r\n                setFieldData('')\r\n                updateData()\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.message)\r\n            })\r\n    }\r\n    //End delete popup\r\n\r\n    if (redirect) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n        <div className={styles.app}>\r\n            <AppHeader styles={styles}\r\n                       handleExit={handleExit}\r\n                       handleClickOpen={handleClickOpen}\r\n                       handleChangeSearch={handleChangeSearch}\r\n            />\r\n            <DataTables styles={styles}\r\n                        chooseArrow={chooseArrow}\r\n                        fieldSortData={fieldSortData}\r\n                        fieldData={fieldData}\r\n                        data={data}\r\n                        searchTerm={searchTerm}\r\n                        setSelectedRow={setSelectedRow}\r\n                        setSelectedRowData={setSelectedRowData}\r\n                        handleClickOpenEdit={handleClickOpenEdit}\r\n                        handleOpenDelete={handleOpenDelete}\r\n            />\r\n\r\n            {/*Add popup*/}\r\n            <AddUserPopup handleClose={handleClose}\r\n                          styles={styles}\r\n                          onSubmit={onSubmit}\r\n                          schema={schema}\r\n                          open={open}\r\n                          errorUser={errorUser}\r\n            />\r\n            {/*End add popup*/}\r\n\r\n            {/*Start edit popup */}\r\n            <EditUserPopup styles={styles}\r\n                           openEdit={openEdit}\r\n                           handleCloseEdit={handleCloseEdit}\r\n                           selectedRow={selectedRow}\r\n                           schema={schema}\r\n                           onSubmitEdit={onSubmitEdit}\r\n                           selectedRowData={selectedRowData}\r\n            />\r\n            {/* End edit popup*/}\r\n\r\n            {/*Delete popup*/}\r\n            <DeleteUserPopup openDelete={openDelete}\r\n                             selectedRow={selectedRow}\r\n                             handleCloseDelete={handleCloseDelete}\r\n                             handleDeleteUser={handleDeleteUser}\r\n            />\r\n            {/*End delete popup*/}\r\n        </div>\r\n    );\r\n}\r\n\r\n","import {SignIn} from \"./components/Form\";\r\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\r\nimport {Main} from \"./components/Main\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <HashRouter>\r\n                <Switch>\r\n                    <Route exact path='/' component={SignIn}/>\r\n                    <Route path='/users' component={Main}/>\r\n                </Switch>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}